basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Device:
    properties:
      ID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      ID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      devices:
        items:
          $ref: '#/definitions/models.Device'
        type: array
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
  utils.DeviceResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      user:
        $ref: '#/definitions/utils.UserResponse'
    type: object
  utils.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Gin Gorm REST API.
  termsOfService: http://swagger.io/terms/
  title: Gin Gorm REST API
  version: "1.0"
paths:
  /device/:
    get:
      consumes:
      - application/json
      description: Get all devices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/utils.DeviceResponse'
            type: array
      summary: Get all devices
      tags:
      - devices
    post:
      consumes:
      - application/json
      description: Create a new device
      parameters:
      - description: Device
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/models.Device'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
      summary: Create a device
      tags:
      - devices
  /device/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a device by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
      summary: Delete a device
      tags:
      - devices
    get:
      consumes:
      - application/json
      description: Get a device by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.DeviceResponse'
      summary: Get a device
      tags:
      - devices
    put:
      consumes:
      - application/json
      description: Update a device by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      - description: Device
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/models.Device'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
      summary: Update a device
      tags:
      - devices
  /user/:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a user
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
